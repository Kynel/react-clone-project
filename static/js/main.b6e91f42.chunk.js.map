{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","HomeContainer","state","a","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","Detail","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","DetailPresenter","SHeader","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,OAAe,cAA0B,2C,kKCEnCA,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EACC,kBAAMP,EAAIQ,IAAI,sBADfD,EAED,kBAAMP,EAAIQ,IAAI,mBAFbD,EAGF,kBAAMP,EAAIQ,IAAI,kBAHZD,EAKE,SAACE,GAAD,OACXT,EAAIQ,IAAJ,gBAAiBC,GAAM,CACrBL,OAAQ,CACNM,mBAAoB,aARfH,EAWH,SAACI,GAAD,OACNX,EAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CACNQ,MAAOC,mBAAmBF,OAKrBG,EACD,kBAAMd,EAAIQ,IAAI,iBADbM,EAEF,kBAAMd,EAAIQ,IAAI,eAFZM,EAGE,kBAAMd,EAAIQ,IAAI,oBAHhBM,EAIC,SAACL,GAAD,OACVT,EAAIQ,IAAJ,aAAcC,GAAM,CAClBL,OAAQ,CACNM,mBAAoB,aAPfI,EAUH,SAACH,GAAD,OACNX,EAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNQ,MAAOC,mBAAmBF,O,6CCtC5BI,EAAYC,IAAOC,IAAV,kFAKTC,EAAQF,IAAOG,KAAV,qEAILC,EAAOJ,IAAOC,IAAV,0IAOJI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACR,EAAD,WACE,cAACG,EAAD,UAAQI,IACR,cAACF,EAAD,UAAOG,QAIXF,EAAQG,UAAY,CAClBF,MAAOG,IAAUC,OAAOC,WACxBJ,SAAUE,IAAUG,UAAU,CAC5BH,IAAUI,QAAQJ,IAAUK,MAC5BL,IAAUK,QAICT,I,0EAAAA,KChCTN,GAAYC,IAAOC,IAAV,sJASA,qBACb,cAAC,GAAD,UACE,sBAAMc,KAAK,MAAMC,aAAW,UAA5B,uBCVEjB,GAAYC,IAAOC,IAAV,2FAMTgB,GAAOjB,IAAOG,KAAV,2CACC,SAACe,GAAD,OAAWA,EAAMC,SAcbC,GAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,cAAC,GAAD,UACE,cAACF,GAAD,CAAME,MAAOA,EAAb,SAAqBE,OCXnBtB,GAAYC,IAAOC,IAAV,gDAITqB,GAAQtB,IAAOC,IAAV,0MACe,SAACiB,GAAD,OAAWA,EAAMK,SAQrCC,GAASxB,IAAOG,KAAV,qIAQNsB,GAAiBzB,IAAOC,IAAV,uKAIdqB,GAGAE,IAMAtB,GAAQF,IAAOG,KAAV,sEAKLuB,GAAO1B,IAAOG,KAAV,oFAwCKwB,GAnCA,SAAC,GAAD,IAAGlC,EAAH,EAAGA,GAAImC,EAAP,EAAOA,SAAUtB,EAAjB,EAAiBA,MAAOuB,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,cAAC,IAAD,CAAMC,GAAID,EAAO,iBAAatC,GAAb,gBAA6BA,GAA9C,SACE,eAAC,GAAD,WACE,eAACgC,GAAD,WACE,cAACH,GAAD,CACEC,MACEK,EAAQ,0CAC+BA,GACnCK,EAAQ,IAA+BC,UAG/C,eAACV,GAAD,WACE,sBAAMT,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IACPa,EAJH,YAOF,cAAC,GAAD,UACGvB,EAAM6B,OAAS,GAAf,UAAuB7B,EAAM8B,UAAU,EAAG,IAA1C,OAAqD9B,IAExD,cAACoB,GAAD,UAAOI,UC7DP/B,GAAYC,IAAOC,IAAV,8CAwEAoC,GApEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,MAA3C,OACpB,qCACE,cAACC,EAAA,EAAD,UACE,uDAEDF,EACC,cAACG,GAAD,IAEA,eAAC,GAAD,WACGN,GAAcA,EAAWH,OAAS,GACjC,cAAC,GAAD,CAAS7B,MAAM,cAAf,SACGgC,EAAWO,KAAI,SAACC,GAAD,OACd,cAAC,GAAD,CAEErD,GAAIqD,EAAMrD,GACVmC,SAAUkB,EAAMC,YAChBzC,MAAOwC,EAAME,eACbnB,OAAQiB,EAAMG,aACdlB,SAAS,EACTD,KAAMgB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAMrD,SAWlB+C,GAAYA,EAASL,OAAS,GAC7B,cAAC,GAAD,CAAS7B,MAAM,kBAAf,SACGkC,EAASK,KAAI,SAACC,GAAD,OACZ,cAAC,GAAD,CAEErD,GAAIqD,EAAMrD,GACVmC,SAAUkB,EAAMC,YAChBzC,MAAOwC,EAAME,eACbnB,OAAQiB,EAAMG,aACdlB,SAAS,EACTD,KAAMgB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAMrD,SAWlB8C,GAAWA,EAAQJ,OAAS,GAC3B,cAAC,GAAD,CAAS7B,MAAM,iBAAf,SACGiC,EAAQM,KAAI,SAACC,GAAD,OACX,cAAC,GAAD,CAEErD,GAAIqD,EAAMrD,GACVmC,SAAUkB,EAAMC,YAChBzC,MAAOwC,EAAME,eACbnB,OAAQiB,EAAMG,aACdlB,SAAS,EACTD,KAAMgB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAMrD,SAWlBiD,GAAS,cAAC,GAAD,CAASvB,MAAM,UAAUE,KAAMqB,WCjElCS,G,4MCGbC,MAAQ,CACNd,WAAY,KACZE,SAAU,KACVD,QAAS,KACTG,MAAO,KACPD,SAAS,G,8FAGX,sCAAAY,EAAA,+EAIc9D,IAJd,uBAGuB+C,EAHvB,EAGMgB,KAAQC,QAHd,SAOchE,IAPd,uBAMuBiD,EANvB,EAMMc,KAAQC,QANd,UAUchE,IAVd,iBASuBgD,EATvB,EASMe,KAAQC,QAEVC,KAAKC,SAAS,CACZnB,aACAE,WACAD,YAdN,kDAiBIiB,KAAKC,SAAS,CACZf,MAAO,kCAlBb,yBAqBIc,KAAKC,SAAS,CACZhB,SAAS,IAtBf,6E,0EA2BA,WAAU,IAAD,EACmDe,KAAKJ,MAAvDd,EADD,EACCA,WAAYE,EADb,EACaA,SAAUD,EADvB,EACuBA,QAASG,EADhC,EACgCA,MAAOD,EADvC,EACuCA,QAE9C,OADAiB,QAAQC,IAAIH,KAAKJ,OAEf,cAAC,GAAD,CACEd,WAAYA,EACZE,SAAUA,EACVD,QAASA,EACTG,MAAOA,EACPD,QAASA,Q,GA7CWmB,IAAMC,WCK5B9D,GAAYC,IAAOC,IAAV,8CA2EA6D,GAvEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUxB,EAAb,EAAaA,QAASyB,EAAtB,EAAsBA,YAAavB,EAAnC,EAAmCA,QAASC,EAA5C,EAA4CA,MAA5C,OAClB,qCACE,cAACC,EAAA,EAAD,UACE,yDAEDF,EACC,cAACG,GAAD,IAEA,eAAC,GAAD,WACGmB,GAAYA,EAAS5B,OAAS,GAC7B,cAAC,GAAD,CAAS7B,MAAM,kBAAf,SACGyD,EAASlB,KAAI,SAACoB,GAAD,OACZ,cAAC,GAAD,CAEExE,GAAIwE,EAAKxE,GACTmC,SAAUqC,EAAKlB,YACfzC,MAAO2D,EAAKC,cACZrC,OAAQoC,EAAKhB,aACbnB,KACEmC,EAAKE,gBAAkBF,EAAKE,eAAe/B,UAAU,EAAG,IANrD6B,EAAKxE,SAYjB8C,GAAWA,EAAQJ,OAAS,GAC3B,cAAC,GAAD,CAAS7B,MAAM,gBAAf,SACGiC,EAAQM,KAAI,SAACoB,GAAD,OACX,cAAC,GAAD,CAEExE,GAAIwE,EAAKxE,GACTmC,SAAUqC,EAAKlB,YACfzC,MAAO2D,EAAKC,cACZrC,OAAQoC,EAAKhB,aACbnB,KACEmC,EAAKE,gBAAkBF,EAAKE,eAAe/B,UAAU,EAAG,IANrD6B,EAAKxE,SAYjBuE,GAAeA,EAAY7B,OAAS,GACnC,cAAC,GAAD,CAAS7B,MAAM,eAAf,SACG0D,EAAYnB,KAAI,SAACoB,GAAD,OACf,cAAC,GAAD,CAEExE,GAAIwE,EAAKxE,GACTmC,SAAUqC,EAAKlB,YACfzC,MAAO2D,EAAKC,cACZrC,OAAQoC,EAAKhB,aACbnB,KACEmC,EAAKE,gBAAkBF,EAAKE,eAAe/B,UAAU,EAAG,IANrD6B,EAAKxE,SAYjBiD,GAAS,cAAC,GAAD,CAASvB,MAAM,UAAUE,KAAMqB,WCpElC0B,G,4MCGbhB,MAAQ,CACNW,SAAU,KACVxB,QAAS,KACTyB,YAAa,KACbvB,SAAS,EACTC,MAAO,M,8FAGT,sCAAAW,EAAA,+EAIcvD,IAJd,uBAGuBiE,EAHvB,EAGMT,KAAQC,QAHd,SAOczD,IAPd,uBAMuByC,EANvB,EAMMe,KAAQC,QANd,UAUczD,IAVd,iBASuBkE,EATvB,EASMV,KAAQC,QAEVC,KAAKC,SAAS,CACZM,WACAxB,UACAyB,gBAdN,kDAiBIR,KAAKC,SAAS,CACZf,MAAO,+BAlBb,yBAqBIc,KAAKC,SAAS,CAAEhB,SAAS,IArB7B,6E,0EAyBA,WAAU,IAAD,EACoDe,KAAKJ,MAAxDW,EADD,EACCA,SAAUxB,EADX,EACWA,QAASyB,EADpB,EACoBA,YAAavB,EADjC,EACiCA,QAASC,EAD1C,EAC0CA,MAEjD,OADAgB,QAAQC,IAAIH,KAAKJ,OAEf,cAAC,GAAD,CACEW,SAAUA,EACVxB,QAASA,EACTyB,YAAaA,EACbvB,QAASA,EACTC,MAAOA,Q,GA3CWkB,IAAMC,WCK1B9D,GAAYC,IAAOC,IAAV,kDAIToE,GAAOrE,IAAOsE,KAAV,oEAKJC,GAAQvE,IAAOwE,MAAV,iFAoFIC,GA9ES,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAlC,EAHsB,EAGtBA,QACAmC,EAJsB,EAItBA,WACAC,EALsB,EAKtBA,aACAnC,EANsB,EAMtBA,MACAoC,EAPsB,EAOtBA,WAPsB,OAStB,eAAC,GAAD,WACE,cAACnC,EAAA,EAAD,UACE,uDAEF,cAAC0B,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,+BACZC,MAAOL,EACPM,SAAUJ,MAGbrC,EACC,cAACG,GAAD,IAEA,qCACGc,QAAQC,IAAIe,EAAcC,GAC1BD,GAAgBA,EAAavC,OAAS,GACrC,cAAC,GAAD,CAAS7B,MAAM,gBAAf,SACGoE,EAAa7B,KAAI,SAACC,GAAD,OAChB,cAAC,GAAD,CAEErD,GAAIqD,EAAMrD,GACVmC,SAAUkB,EAAMC,YAChBzC,MAAOwC,EAAME,eACbnB,OAAQiB,EAAMG,aACdlB,SAAS,EACTD,KAAMgB,EAAMI,cAAgBJ,EAAMI,aAAad,UAAU,EAAG,IANvDU,EAAMrD,SAWlBkF,GAAaA,EAAUxC,OAAS,GAC/B,cAAC,GAAD,CAAS7B,MAAM,aAAf,SACGqE,EAAU9B,KAAI,SAACoB,GAAD,OACb,cAAC,GAAD,CAEExE,GAAIwE,EAAKxE,GACTmC,SAAUqC,EAAKlB,YACfzC,MAAO2D,EAAKC,cACZrC,OAAQoC,EAAKhB,aACbnB,KACEmC,EAAKE,gBAAkBF,EAAKE,eAAe/B,UAAU,EAAG,IANrD6B,EAAKxE,SAYjBiD,GAAS,cAAC,GAAD,CAASvB,MAAM,UAAUE,KAAMqB,IACxCiC,GACCD,GACqB,IAArBC,EAAUxC,QACc,IAAxBuC,EAAavC,QACX,cAAC,GAAD,CAASd,KAAK,iBAAiBF,MAAM,mBCnFlCgE,G,4MCGb/B,MAAQ,CACNsB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZnC,SAAS,EACTC,MAAO,M,EAGTmC,aAAe,SAACO,GACdA,EAAMC,iBADkB,IAEhBT,EAAe,EAAKxB,MAApBwB,WACW,KAAfA,GACF,EAAKU,aAAaV,I,EAItBE,WAAa,SAACM,GAAW,IAEXH,EACRG,EADFG,OAAUN,MAEZ,EAAKxB,SAAS,CACZmB,WAAYK,K,EAIhBK,a,sBAAe,oCAAAjC,EAAA,6DACb,EAAKI,SAAS,CAAEhB,SAAS,IACjBmC,EAAe,EAAKxB,MAApBwB,WAFK,kBAMDrF,EAAiBqF,GANhB,uBAKQF,EALR,EAKTpB,KAAQC,QALC,SASDzD,EAAa8E,GATZ,gBAQQD,EARR,EAQTrB,KAAQC,QAEV,EAAKE,SAAS,CAAEiB,eAAcC,cAVnB,kDAYX,EAAKlB,SAAS,CAAEf,MAAO,wBAZZ,yBAcXgB,QAAQC,IAAI,EAAKP,OACjB,EAAKK,SAAS,CAAEhB,SAAS,IAfd,6E,4CAmBf,WAAU,IAAD,EACyDe,KAAKJ,MAA7DsB,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAYnC,EADtC,EACsCA,QAASC,EAD/C,EAC+CA,MACtD,OACE,cAAC,GAAD,CACEgC,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZnC,QAASA,EACTC,MAAOA,EACPmC,aAAcrB,KAAKqB,aACnBC,WAAYtB,KAAKsB,iB,GAvDKlB,IAAMC,WCE9B9D,GAAYC,IAAOC,IAAV,sHAOTuF,GAAWxF,IAAOC,IAAV,oQAMY,SAACiB,GAAD,OAAWA,EAAMuE,WAQrCC,GAAU1F,IAAOC,IAAV,uHAQP0F,GAAQ3F,IAAOC,IAAV,sLAGe,SAACiB,GAAD,OAAWA,EAAMuE,WAMrCG,GAAO5F,IAAOC,IAAV,mEAKJC,GAAQF,IAAO6F,GAAV,kDAILC,GAAgB9F,IAAOC,IAAV,iDAIb8F,GAAO/F,IAAOG,KAAV,4BAEJ6F,GAAUhG,IAAOG,KAAV,iDAIP8F,GAAWjG,IAAOkG,EAAV,uGAwECC,GAjEA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQ3D,EAAX,EAAWA,QAAX,EAAoBC,MAApB,OACbD,EACE,qCACE,cAACE,EAAA,EAAD,UACE,wDAEF,cAACC,GAAD,OAGF,eAAC,GAAD,WACE,cAACD,EAAA,EAAD,UACE,kCACGyD,EAAOpD,eAAiBoD,EAAOpD,eAAiBoD,EAAOlC,cAAe,IADzE,iBAKF,cAACsB,GAAD,CACEC,QAAO,6CAAwCW,EAAOC,iBAExD,eAACX,GAAD,WACE,cAACC,GAAD,CACEF,QACEW,EAAOrD,YAAP,6CAC0CqD,EAAOrD,aAC7Cd,EAAQ,MAGhB,eAAC2D,GAAD,WACE,cAAC,GAAD,UACGQ,EAAOpD,eACJoD,EAAOpD,eACPoD,EAAOlC,gBAEb,eAAC4B,GAAD,WACE,cAACC,GAAD,UACGK,EAAOlD,aACJkD,EAAOlD,aAAad,UAAU,EAAG,GACjCgE,EAAOjC,eAAe/B,UAAU,EAAG,KAEzC,cAAC4D,GAAD,mBACA,eAACD,GAAD,WACGK,EAAOE,QAAUF,EAAOE,QAAUF,EAAOG,iBAD5C,UAGA,cAACP,GAAD,mBACA,cAACD,GAAD,UACGK,EAAOI,QACNJ,EAAOI,OAAO3D,KAAI,SAAC4D,EAAOC,GAAR,OAChBA,IAAUN,EAAOI,OAAOrE,OAAS,EAC7BsE,EAAME,KADV,UAEOF,EAAME,KAFb,eAMR,cAACV,GAAD,UAAWG,EAAOQ,qBCzHbC,G,kDCGb,WAAY3F,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAGH4F,EACV5F,EADF6F,SAAYD,SAHG,OAKjB,EAAK1D,MAAQ,CACXgD,OAAQ,KACR1D,MAAO,KACPD,SAAS,EACTV,QAAS+E,EAASE,SAAS,YATZ,E,4FAanB,0CAAA3D,EAAA,2DAMMG,KAAKtC,MAHKzB,EAHhB,EAEIwH,MACE7H,OAAUK,GAEDyH,EALf,EAKIC,QAAWD,KAELnF,EAAYyB,KAAKJ,MAAjBrB,QACFqF,EAAWC,SAAS5H,IACtB6H,MAAMF,GATZ,yCAUWF,EAAK,MAVhB,UAYMd,EAAS,KAZf,UAcQrE,EAdR,kCAegCxC,EAAsB6H,GAftD,iBAeehB,EAff,EAeS9C,KAfT,yCAiBgCxD,EAAiBsH,GAjBjD,iBAiBehB,EAjBf,EAiBS9C,KAjBT,0DAoBIE,KAAKC,SAAS,CAAEf,MAAO,yBApB3B,yBAsBIc,KAAKC,SAAS,CAAEhB,SAAS,EAAO2D,WAtBpC,6E,0EA0BA,WAAU,IAAD,EAC4B5C,KAAKJ,MAAhCgD,EADD,EACCA,OAAQ1D,EADT,EACSA,MAAOD,EADhB,EACgBA,QACvB,OAAO,cAAC8E,GAAD,CAAiBnB,OAAQA,EAAQ1D,MAAOA,EAAOD,QAASA,Q,GA1CrCmB,IAAMC,WCA9B2D,GAAUxH,IAAOyH,OAAV,0SAePC,GAAO1H,IAAO2H,GAAV,gDAIJ5B,GAAO/F,IAAO4H,GAAV,2KAKJ,SAAC1G,GAAD,OAAYA,EAAM2G,QAAU,UAAY,iBAIxCC,GAAQ9H,YAAO+H,IAAP/H,CAAH,qHAuBIgI,gBAhBA,SAAC,GAAD,IAAelB,EAAf,EAAGC,SAAYD,SAAf,OACb,cAACU,GAAD,UACE,eAACE,GAAD,WACE,cAAC,GAAD,CAAMG,QAAsB,MAAbf,EAAf,SACE,cAACgB,GAAD,CAAO9F,GAAG,IAAV,sBAEF,cAAC,GAAD,CAAM6F,QAAsB,QAAbf,EAAf,SACE,cAACgB,GAAD,CAAO9F,GAAG,MAAV,kBAEF,cAAC,GAAD,CAAM6F,QAAsB,YAAbf,EAAf,SACE,cAACgB,GAAD,CAAO9F,GAAG,UAAV,8BCpCO,qBACb,cAAC,IAAD,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAME,UAAWE,KAC7B,cAAC,IAAD,CAAOJ,KAAK,UAAUE,UAAWG,KACjC,cAAC,IAAD,CAAOL,KAAK,aAAaE,UAAWhC,KACpC,cAAC,IAAD,CAAO8B,KAAK,YAAYE,UAAWhC,KACnC,cAAC,IAAD,CAAUoC,KAAK,IAAIvG,GAAG,e,SCFfwG,GAlBMC,YAAH,sYAChBC,MCSaC,OATf,WACE,OACE,qCACE,cAACC,GAAD,IACA,cAACC,GAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b6e91f42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.93da7f7c.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"f9d63d94c613272a4f280ea14340ddf0\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  topRated: () => api.get(\"movie/top_rated\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.prototype = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\").default\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 15)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nclass HomeContainer extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch (error) {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nclass TVContainer extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    console.log(this.state);\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\nexport default TVContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {console.log(movieResults, tvResults)}\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                isMovie={true}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothihg found!\" color=\"#bdc3c7\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nclass SearchContainer extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm(searchTerm);\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    this.setState({ loading: true });\n    const { searchTerm } = this.state;\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      console.log(this.state);\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\nexport default SearchContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Detail = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetail.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default Detail;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nclass DetailContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n\nexport default DetailContainer;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Header = ({ location: { pathname } }) => (\n  <SHeader>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </SHeader>\n);\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\nimport Header from \"Components/Header\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n${reset};\na{\n    text-decoration: none;\n    color: inherit;\n} \n*{\n    box-sizing: border-box;\n}\nbody{\n    font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 14px;\n    background-color: rgba(20, 20, 20, 1);\n    color: white;\n    padding-top: 50px;\n}\n`;\n\nexport default globalStyles;\n","import Router from \"Components/Router\";\nimport Header from \"Components/Header\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}